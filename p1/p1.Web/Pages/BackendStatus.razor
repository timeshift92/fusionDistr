@using Stl.Fusion.Authentication
@using Stl.Fusion.Extensions
@using System.Collections.Immutable
@using Stl
@inherits Stl.Fusion.Blazor.ComputedStateComponent<System.Collections.Immutable.ImmutableList<(string Backend, Exception Error)>>
@inject Session _session
@inject IBackendStatus _backendStatus
@{
    var errors = State.ValueOrDefault ?? ImmutableList<(string Backend, Exception Error)>.Empty;
}
@if (errors.Any()) {
    @foreach (var (backend, error) in errors) {
        
            <b>@backend:</b> @(error.Message.NullIfEmpty() ?? "Unknown error")
        
    }
}

@code {
    [Parameter]
    public string CssClass { get; set; } = "";

    protected override Task<ImmutableList<(string Backend, Exception Error)>> ComputeState(CancellationToken cancellationToken)
        => _backendStatus.GetAllErrors(_session, cancellationToken);
}